{"version":3,"sources":["logo.svg","TIMEOPTIONS.js","GuestTimeView.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","DefaultMeetingTimeOptions","num_meetings","length","randInt","lo","hi","Math","floor","random","DefaultAvailability","name","availability","Array","fill","map","pad2","num","ICON_COLORS","ICONS","globe","react_default","a","createElement","viewBox","aria-label","aria-hidden","width","height","d","check","check_with_parens","transform","id","cross","OptionList","props","listEltStyle","alignItems","display","marginBottom","lineHeight","iconStyle","borderRadius","marginRight","justifyContent","style","Object","objectSpread","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","paddingInlineStart","margin","padding","listStyleType","timeZone","background","concat","color","EventMetadata","className","marginTop","fontWeight","eventOrganizer","eventTitle","GuestTimeView_OptionList","getTimeObject","startDate","finishDate","getTimeObj","h","m","hours","minutes","am","Date","day","getDay","date","getDate","month","getMonth","startTime","getHours","getMinutes","finishTime","meetingOptionStyles","icon","MeetingOption","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hover","selected","time","endDate","toggleSelected","bind","assertThisInitialized","inherits","createClass","key","value","newstate","setState","forceUpdate","_this2","onMouseEnter","toggleHover","onMouseLeave","onClick","border","userSelect","React","Component","ExistingRows","AvailabilityMarking","idx","minWidth","Popup","handleClose","content","GuestTimeView","_useState","useState","_useState2","slicedToArray","popupOpen","setPopupOpen","closePopup","GuestTimeView_EventMetadata","fontSize","opt","GuestTimeView_MeetingOption","elt","flexDirection","type","GuestTimeView_Popup","placeholder","App","src_GuestTimeView","reportWebVitals","onPerfEntry","Function","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oOCApCC,SAA4B,CAC5B,CAAC,wBAAyB,yBAC1B,CAAC,wBAAyB,yBAC1B,CAAC,wBAAyB,yBAC1B,CAAC,wBAAyB,yBAC1B,CAAC,wBAAyB,yBAC1B,CAAC,wBAAyB,yBAC1B,CAAC,wBAAyB,2BAG1BC,EAAeD,EAA0BE,OAG7C,SAASC,EAAQC,EAAIC,GAAM,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAKD,IAAOA,EAE1E,IAAIK,EAAsB,CACtB,CACIC,KAAM,YACNC,aAAc,IAAIC,MAAMX,GAAcY,KAAK,IAE/C,CACIH,KAAM,WACNC,aAAc,IAAIC,MAAMX,GAAcY,KAAK,GAAGC,IAAI,WAAQ,OAAOX,EAAQ,EAAG,MAEhF,CACIO,KAAM,WACNC,aAAc,IAAIC,MAAMX,GAAcY,KAAK,GAAGC,IAAI,WAAQ,OAAOX,EAAQ,EAAG,OCrBpF,SAASY,EAAKC,GACV,OAAQA,EAAM,GAAK,IAAM,IAAMA,EAInC,IAAMC,EACQ,UADRA,EAEU,UAFVA,EAGS,UAHTA,EAIW,UAJXA,EAKO,UALPA,EAMS,UAITC,EAAQ,CACVC,MACIC,EAAAC,EAAAC,cAAA,OAAKC,QAAQ,YAAYC,aAAW,QAAQC,cAAY,OAAOC,MAAM,KAAKC,OAAO,MAAKP,EAAAC,EAAAC,cAAA,KAAGT,KAAK,QAC1FO,EAAAC,EAAAC,cAAA,QAAMM,EAAE,oBACRR,EAAAC,EAAAC,cAAA,QAAMM,EAAE,gyBAOsEf,KAAK,mBAG3FgB,MAAQT,EAAAC,EAAAC,cAAA,OAAKC,QAAQ,YAAYC,aAAW,QAAQC,cAAY,OAAOC,MAAM,KAAKC,OAAO,MACrFP,EAAAC,EAAAC,cAAA,QAAMM,EAAE,oDAAoDf,KAAK,kBAErEiB,kBAAoBV,EAAAC,EAAAC,cAAA,OAAKC,QAAQ,YAAYC,aAAW,gBAAgBC,cAAY,OAAOC,MAAM,KAAKC,OAAO,MACzGP,EAAAC,EAAAC,cAAA,QAAMS,UAAU,kBACZH,EAAE,m1BAQFI,GAAG,uBACHnB,KAAK,kBAEboB,MAAQb,EAAAC,EAAAC,cAAA,OAAKC,QAAQ,YAAYC,aAAW,QAAQC,cAAY,OAAOC,MAAM,KAAKC,OAAO,MACrFP,EAAAC,EAAAC,cAAA,QAAMM,EAAE,wGAAwGf,KAAK,mBAKvHqB,EAAa,SAACC,GAChB,IAAMC,EAAe,CACjBC,WAAY,SACZC,QAAS,OACTC,aAAc,MACdC,WAAY,QAEVC,EAAY,CACdC,aAAc,MACdC,YAAa,MACbjB,MAAO,OACPC,OAAQ,OACRW,QAAS,OACTD,WAAY,SACZO,eAAgB,UAWpB,OACIxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIuB,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAXD,CACZR,QAAS,QAETU,iBAAkB,MAClBC,eAAgB,MAChBC,kBAAmB,MACnBC,gBAAiB,MACjBC,mBAAoB,QAIO,CAAEC,OAAQ,MAAOC,QAAS,MAAOC,cAAe,UAEnEnC,EAAAC,EAAAC,cAAA,MAAIuB,MAAOT,GACPhB,EAAAC,EAAAC,cAAA,QAAMuB,MAAOJ,GACRvB,EAAMC,OAEXC,EAAAC,EAAAC,cAAA,KAAGuB,MAAO,CAAEQ,OAAQ,QAAUlB,EAAMqB,WAExCpC,EAAAC,EAAAC,cAAA,MAAIuB,MAAOT,GACPhB,EAAAC,EAAAC,cAAA,QAAMuB,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAOL,EAAS,CAAEgB,WAAU,GAAAC,OAAKzC,GAAwB0C,MAAK,GAAAD,OAAKzC,MACzEC,EAAMW,OAEXT,EAAAC,EAAAC,cAAA,KAAGuB,MAAO,CAAEQ,OAAQ,QAAQ,kBAEhCjC,EAAAC,EAAAC,cAAA,MAAIuB,MAAOT,GACPhB,EAAAC,EAAAC,cAAA,QAAMuB,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAOL,EAAS,CAAEgB,WAAU,GAAAC,OAAKzC,GAAyB0C,MAAK,GAAAD,OAAKzC,MAC1EC,EAAMY,mBAEXV,EAAAC,EAAAC,cAAA,KAAGuB,MAAO,CAAEQ,OAAQ,QAAQ,0BAEhCjC,EAAAC,EAAAC,cAAA,MAAIuB,MAAOT,GACPhB,EAAAC,EAAAC,cAAA,QAAMuB,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAOL,EAAS,CAAEgB,WAAU,GAAAC,OAAKzC,GAAuB0C,MAAK,GAAAD,OAAKzC,MACxEC,EAAMe,OAEXb,EAAAC,EAAAC,cAAA,KAAGuB,MAAO,CAAEQ,OAAQ,QAAQ,UAQ1CO,EAAgB,SAACzB,GACnB,OACIf,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,iBACZzC,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAEiB,UAAW,MAAOvB,aAAc,MAAOe,QAAS,QAC1DlC,EAAAC,EAAAC,cAAA,KAAGuB,MAAO,CAAEkB,WAAY,QAAW5B,EAAM6B,gBACzC5C,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAEN,aAAc,MAAOe,QAAS,QACxClC,EAAAC,EAAAC,cAAA,UAAKa,EAAM8B,aAEf7C,EAAAC,EAAAC,cAAC4C,EAAU,CAACV,SAAS,yBAWjC,SAASW,EAAcC,EAAWC,GAC9B,IAEMC,EAAa,SAACC,EAAGC,GACnB,MAAO,CAAEC,OAASF,EAAI,GAAK,GAAK,EAAIG,QAASF,EAAGG,GAAKJ,EAAI,KAI7D,OAFAH,EAAY,IAAIQ,KAAKR,GACrBC,EAAa,IAAIO,KAAKP,GACf,CACHQ,IARO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAQxCT,EAAUU,UACpBC,KAAMX,EAAUY,UAChBC,MATS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OASzEb,EAAUc,YACxBC,UAAWb,EAAWF,EAAUgB,WAAYhB,EAAUiB,cACtDC,WAAYhB,EAAWD,EAAWe,WAAYf,EAAWgB,eASjE,IAAME,EAAsB,CACxB,CACI1C,MAAO,CACHY,WAAY,OACZE,MAAO1C,GAEXuE,KAAMtE,EAAMe,OAEhB,CACIY,MAAO,CACHY,WAAYxC,EACZ0C,MAAO1C,GAEXuE,KAAMtE,EAAMe,OAEhB,CACIY,MAAO,CACHY,WAAYxC,EACZ0C,MAAO1C,GAEXuE,KAAMtE,EAAMW,OAEhB,CACIgB,MAAO,CACHY,WAAYxC,EACZ0C,MAAO1C,GAEXuE,KAAMtE,EAAMW,OAEhB,CACIgB,MAAO,CACHY,WAAYxC,EACZ0C,MAAO1C,GAEXuE,KAAMtE,EAAMY,mBAEhB,CACIe,MAAO,CACHY,WAAYxC,EACZ0C,MAAO1C,GAEXuE,KAAMtE,EAAMY,oBAQd2D,EAAa,SAAAC,GACf,SAAAD,EAAYtD,GAAO,IAAAwD,EAUgB,OAVhB7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAAJ,IACfE,EAAA7C,OAAAgD,EAAA,EAAAhD,CAAA+C,KAAA/C,OAAAiD,EAAA,EAAAjD,CAAA2C,GAAAO,KAAAH,KAAM1D,KAGD8D,MAAQ,CACTC,OAAO,EACPC,SAAU,EACVC,KAAMjC,EAAc,IAAIS,KAAKzC,EAAMiC,WAAY,IAAIQ,KAAKzC,EAAMkE,WAGlEV,EAAKW,eAAeC,KAAKzD,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAA6C,KAAMA,EA2DlC,OAtEc7C,OAAA2D,EAAA,EAAA3D,CAAA2C,EAAAC,GAYd5C,OAAA4D,EAAA,EAAA5D,CAAA2C,EAAA,EAAAkB,IAAA,cAAAC,MAAA,WAIG,IAAIC,EAAWhB,KAAKI,MACpBY,EAASX,OAASW,EAASX,MAE3BL,KAAKiB,SAASD,KAEjB,CAAAF,IAAA,iBAAAC,MAAA,WAGG,IAAIC,EAAWhB,KAAKI,MACpBY,EAASV,UAAYU,EAASV,SAAW,GAAK,EAC9CN,KAAKiB,SAASD,GAEdhB,KAAKkB,gBACR,CAAAJ,IAAA,SAAAC,MAAA,WAEQ,IAAAI,EAAAnB,KACL,OACIzE,EAAAC,EAAAC,cAAA,OACI2F,aAAcpB,KAAKqB,YAAYX,KAAKV,MAAOsB,aAActB,KAAKqB,YAAYX,KAAKV,MAC/EuB,QAAS,WAAQJ,EAAKV,mBAEtBlF,EAAAC,EAAAC,cAAA,OAAKuB,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GACHyC,EAA0C,EAAtBM,KAAKI,MAAME,SAAeN,KAAKI,MAAMC,OAAOrD,MAAK,CACxEwE,OAAQ,kBAAmB3E,aAAc,MACzC4E,WAAY,SAEZzD,UAAW,iBAAmB,CAAC,aAAc,UAAW,aAAagC,KAAKI,MAAME,WAEhF/E,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAES,QAAS,wBACnBlC,EAAAC,EAAAC,cAAA,KAAGuC,UAAW,oBAAqBgC,KAAKI,MAAMG,KAAKvB,KACnDzD,EAAAC,EAAAC,cAAA,KAAGuC,UAAW,eAAgBgC,KAAKI,MAAMG,KAAKrB,MAC9C3D,EAAAC,EAAAC,cAAA,KAAGuC,UAAW,oBAAqBgC,KAAKI,MAAMG,KAAKnB,OACnD7D,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAElB,OAAQ,SACtBP,EAAAC,EAAAC,cAAA,SAAIP,EAAK8E,KAAKI,MAAMG,KAAKjB,UAAUV,OAAM,IAAG1D,EAAK8E,KAAKI,MAAMG,KAAKjB,UAAUT,SAAQ,IAAGmB,KAAKI,MAAMG,KAAKjB,UAAUR,GAAK,KAAO,MAC5HvD,EAAAC,EAAAC,cAAA,SAAIP,EAAK8E,KAAKI,MAAMG,KAAKd,WAAWb,OAAM,IAAG1D,EAAK8E,KAAKI,MAAMG,KAAKd,WAAWZ,SAAQ,IAAGmB,KAAKI,MAAMG,KAAKd,WAAWX,GAAK,KAAO,OAGnIvD,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAEnB,MAAO,OAAQW,WAAY,SAAUgB,OAAQ,SAAUf,QAAS,SAC1ElB,EAAAC,EAAAC,cAAA,QAAMuB,MAAO,CACTY,WAAY,QAASE,MAAO4B,EAA0C,EAAtBM,KAAKI,MAAME,SAAeN,KAAKI,MAAMC,OAAOrD,MAAMc,MAClGN,OAAQ,aAGRjC,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CACRwE,OAAQ,kBAAmB3E,aAAc,MACzCW,OAAQ,MAAOC,QAAS,IAAK5B,MAAO,OAAQC,OAAQ,SAEnD4D,EAA0C,EAAtBM,KAAKI,MAAME,SAAeN,KAAKI,MAAMC,OAAOV,cAO5FC,EAtEc,CAAS8B,IAAMC,WAyElC,SAASC,EAAatF,GAClB,SAASuF,EAAoBvF,GACzB,OACIf,EAAAC,EAAAC,cAAA,OAAKuB,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GACHyC,EAAgC,EAAZpD,EAAMwF,IAAU,GAAG9E,MAAK,CAC/CP,QAAS,OACTZ,MAAO,OAAQW,WAAY,SAAUO,eAAgB,SACrDS,OAAQ,SAAUX,aAAc,SAE/B6C,EAAgC,EAAZpD,EAAMwF,KAASnC,MAIhD,OACIpE,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,oBACZzC,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAEP,QAAS,OAAQD,WAAY,SAAUuF,SAAU,QAAStE,QAAS,SAC7ElC,EAAAC,EAAAC,cAAA,KAAGuC,UAAW,YAAa1B,EAAMzB,OAErCU,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,cAAehB,MAAO,CAAEnB,MAAO,SAEvCS,EAAMxB,aAAaG,IAAI,SAAC6G,GACpB,OAAOvG,EAAAC,EAAAC,cAACoG,EAAmB,CAACC,IAAKA,QASzD,IAAME,EAAQ,SAAA1F,GACV,OACIf,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,aACXzC,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,OACXzC,EAAAC,EAAAC,cAAA,QAAMuC,UAAU,aAAauD,QAASjF,EAAM2F,aAAY,KACvD3F,EAAM4F,WAmFRC,MA7Ef,WAA2B,IAAAC,EACWC,mBAAS,GAAEC,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAmF,EAAA,GAAtCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAKxBI,EAAa,WACfD,EAAa,IAMjB,OACIlH,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,iBACZzC,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,eACZzC,EAAAC,EAAAC,cAACkH,EAAa,CAACxE,eAAe,cAAcC,WAAW,eAE3D7C,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,kBACZzC,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,MAAIuB,MAAO,CAAEkB,WAAY,SAAU0E,SAAU,WAAYpF,OAAQ,oBAAoB,6DACrFjC,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,eAAc,IAC1BzC,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAEP,QAAS,OAAQD,WAAY,SAAUuF,SAAU,QAAStE,QAAS,SAC7ElC,EAAAC,EAAAC,cAAA,KAAGuC,UAAW,YAAW,QAE7BzC,EAAAC,EAAAC,cAAA,OAAKuC,UAAW,eACX7D,EAA0Bc,IAAI,SAAC4H,GAC5B,OAAOtH,EAAAC,EAAAC,cAACqH,EAAa,CAACvE,UAAWsE,EAAI,GAAIrC,QAASqC,EAAI,SAK9DjI,EAAoBK,IAAI,SAAC8H,GACrB,OAAQxH,EAAAC,EAAAC,cAACmG,EAAY,CAAC/G,KAAMkI,EAAIlI,KAAMC,aAAciI,EAAIjI,iBAGhES,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CACRP,QAAS,OAAQuG,cAAe,cAAexG,WAAY,SAC3DiB,QAAS,SAGTlC,EAAAC,EAAAC,cAAA,SACIwH,KAAK,SACLlC,MAAM,SACNQ,QA1CF,WAEdkB,EAAa,OA6CU,IAAdD,GAAmBjH,EAAAC,EAAAC,cAACyH,EAAK,CACtBhB,QAAS3G,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOwH,KAAK,OAAOE,YAAY,gBAAgBnG,MAAO,CAAE+E,SAAU,WAClExG,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOwH,KAAK,OAAOE,YAAY,0BAA0BnG,MAAO,CAAE+E,SAAU,WAC5ExG,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,SAAOwH,KAAK,SAASlC,MAAM,OAAOQ,QAASmB,IAC3CnH,EAAAC,EAAAC,cAAA,SAAOwH,KAAK,SAASlC,MAAM,SAASQ,QAjDnC,WACjBkB,EAAa,OAkDDR,YAAaS,IAIF,IAAdF,GAAmBjH,EAAAC,EAAAC,cAACyH,EAAK,CACtBhB,QAAS3G,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,kGAEJwG,YAAaS,OC1WlBU,MAvBf,WACE,OAkBE7H,EAAAC,EAAAC,cAAC4H,EAAa,OCZHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCvJ,EAAAwJ,EAAA,GAAAC,KAAAzJ,EAAAyG,KAAA,UAAqBgD,KAAK,SAAAC,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH9I,EAAAC,EAAAC,cAACF,EAAAC,EAAM8I,WAAU,KACf/I,EAAAC,EAAAC,cAAC8I,EAAG,QAORjB","file":"static/js/main.d19b1699.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","let DefaultMeetingTimeOptions = [\n    [\"Dec 12, 2022 23:30:00\", \"Dec 13, 2022 00:30:00\"],\n    [\"Dec 13, 2022 19:30:00\", \"Dec 13, 2022 20:30:00\"],\n    [\"Dec 13, 2022 20:30:00\", \"Dec 13, 2022 21:30:00\"],\n    [\"Dec 14, 2022 19:00:00\", \"Dec 14, 2022 20:00:00\"],\n    [\"Dec 14, 2022 21:15:00\", \"Dec 14, 2022 22:15:00\"],\n    [\"Dec 15, 2022 18:30:00\", \"Dec 15, 2022 19:30:00\"],\n    [\"Dec 15, 2022 21:30:00\", \"Dec 15, 2022 22:30:00\"],\n];\n\nlet num_meetings = DefaultMeetingTimeOptions.length;\n\n// Randomly generates an integer in the range [lo, hi)\nfunction randInt(lo, hi) { return Math.floor(Math.random() * (hi - lo)) + lo; }\n\nlet DefaultAvailability = [\n    {\n        name: \"Organizer\",\n        availability: new Array(num_meetings).fill(1),\n    },\n    {\n        name: \"Person 1\",\n        availability: new Array(num_meetings).fill(0).map(() => { return randInt(0, 3) }),\n    },\n    {\n        name: \"Person 2\",\n        availability: new Array(num_meetings).fill(0).map(() => { return randInt(0, 3) }),\n    },\n]\n\nexport { DefaultMeetingTimeOptions, num_meetings, DefaultAvailability };","import React, { useState } from \"react\";\nimport \"./css/GuestTimeView.css\"\nimport { DefaultMeetingTimeOptions, DefaultAvailability } from \"./TIMEOPTIONS\";\n\n// Pads '9' to '09' for displaying hours/minutes well\nfunction pad2(num) {\n    return (num < 10 ? '0' : '') + num;\n}\n\n// Doodle color scheme\nconst ICON_COLORS = {\n    bg_green: \"#ebf7d4\",\n    main_green: \"#517d0f\",\n    bg_yellow: \"#fff0b3\",\n    main_yellow: \"#936e10\",\n    bg_grey: \"#ebeff2\",\n    main_grey: \"#a0aebd\",\n};\n\n// SVG icons used in Doodle\nconst ICONS = {\n    globe: (\n        <svg viewBox=\"0 0 20 20\" aria-label=\"Globe\" aria-hidden=\"true\" width=\"16\" height=\"16\"><g fill=\"none\">\n            <path d=\"M-2-2h24v24H-2z\"></path>\n            <path d=\"M9.99 0C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0Zm6.93 6h-2.95a15.65 15.65\n                     0 0 0-1.38-3.56A8.03 8.03 0 0 1 16.92 6ZM10 2.04c.83 1.2 1.48 2.53 1.91 3.96H8.09C8.52 4.57 9.17 3.24 10 \n                     2.04ZM2.26 12C2.1 11.36 2 10.69 2 10s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H2.26Zm.82 \n                     2h2.95c.32 1.25.78 2.45 1.38 3.56A7.987 7.987 0 0 1 3.08 14Zm2.95-8H3.08a7.987 7.987 0 0 1 4.33-3.56A15.65 \n                     15.65 0 0 0 6.03 6ZM10 17.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96ZM12.34 \n                     12H7.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2Zm.25 \n                     5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95a8.03 8.03 0 0 1-4.33 3.56ZM14.36 12c.08-.66.14-1.32.14-2 \n                     0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38Z\" fill=\"currentColor\"></path>\n        </g></svg>\n    ),\n    check: (<svg viewBox=\"0 0 24 24\" aria-label=\"Check\" aria-hidden=\"true\" width=\"20\" height=\"20\">\n        <path d=\"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" fill=\"currentColor\"></path>\n    </svg>),\n    check_with_parens: (<svg viewBox=\"0 0 24 24\" aria-label=\"BracketsCheck\" aria-hidden=\"true\" width=\"20\" height=\"20\">\n        <path transform=\"translate(2, 2)\"\n            d=\"M4.46 1.755a.833.833 0 0 1 .748 1.49c-.085.043-.265.15-.508.327a7.084 7.084 0 0 \n            0-1.23 1.15C2.343 6.054 1.667 7.771 1.667 9.945c0 1.868.679 3.534 1.821 4.983.404.513.838.96 \n            1.27 1.337.254.222.446.368.544.434a.833.833 0 1 1-.934 1.38c-.566-.382-1.379-1.092-2.188-2.12C.82 14.238 \n            0 12.224 0 9.946c0-2.583.824-4.677 2.198-6.3.83-.981 1.67-1.592 2.263-1.89Zm9.794.371a.833.833 0 0 1 1.119-.37c.593.297 \n            1.432.908 2.263 1.89 1.373 1.622 2.198 3.716 2.198 6.299 0 2.278-.822 4.292-2.18 6.015-.81 1.027-1.622 1.737-2.188 \n            2.12a.833.833 0 1 1-.934-1.38 6.28 6.28 0 0 0 .544-.435c.432-.377.865-.824 1.27-1.337 1.142-1.45 1.82-3.115 1.82-4.983\n            0-2.174-.675-3.891-1.802-5.223a7.084 7.084 0 0 0-1.23-1.15 4.166 4.166 0 0 0-.509-.327.833.833 0 0 1-.37-1.119Zm-.127\n            4.062a1.25 1.25 0 0 1 1.746 1.79l-7.437 7.25-4.362-4.81A1.25 1.25 0 0 1 5.926 8.74l2.62 2.89Z\"\n            id=\"BracketsCheck_svg__a\"\n            fill=\"currentColor\"></path>\n    </svg>),\n    cross: (<svg viewBox=\"0 0 24 24\" aria-label=\"Close\" aria-hidden=\"true\" width=\"20\" height=\"20\">\n        <path d=\"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" fill=\"currentColor\"></path>\n    </svg>)\n};\n\n// Answering Options in left of grid\nconst OptionList = (props) => {\n    const listEltStyle = {\n        alignItems: \"center\",\n        display: \"flex\",\n        marginBottom: \"8px\",\n        lineHeight: \"21px\",\n    }\n    const iconStyle = {\n        borderRadius: \"2px\",\n        marginRight: \"4px\",\n        width: \"24px\",\n        height: \"24px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    }\n    const ulStyle = {\n        display: \"block\",\n        // listStyleType: \"disc\",\n        marginBlockStart: \"1em\",\n        marginBlockEnd: \"1em\",\n        marginInlineStart: \"0px\",\n        marginInlineEnd: \"0px\",\n        paddingInlineStart: \"40px\",\n    }\n    return (\n        <div>\n            <ul style={{ ...ulStyle, margin: \"0px\", padding: \"0px\", listStyleType: \"none\" }}>\n                {/* SVG for icons sourced from Doodle */}\n                <li style={listEltStyle}>\n                    <span style={iconStyle}>\n                        {ICONS.globe}\n                    </span>\n                    <p style={{ margin: \"0px\" }}>{props.timeZone}</p>\n                </li>\n                <li style={listEltStyle}>\n                    <span style={{ ...iconStyle, background: `${ICON_COLORS.bg_green}`, color: `${ICON_COLORS.main_green}` }}>\n                        {ICONS.check}\n                    </span>\n                    <p style={{ margin: \"0px\" }}>Yes (1 click)</p>\n                </li>\n                <li style={listEltStyle}>\n                    <span style={{ ...iconStyle, background: `${ICON_COLORS.bg_yellow}`, color: `${ICON_COLORS.main_yellow}` }}>\n                        {ICONS.check_with_parens}\n                    </span>\n                    <p style={{ margin: \"0px\" }}>If need be (2 clicks)</p>\n                </li>\n                <li style={listEltStyle}>\n                    <span style={{ ...iconStyle, background: `${ICON_COLORS.bg_grey}`, color: `${ICON_COLORS.main_grey}` }}>\n                        {ICONS.cross}\n                    </span>\n                    <p style={{ margin: \"0px\" }}>No</p>\n                </li>\n            </ul>\n        </div >\n    )\n}\n\n// props: { eventOrganizer: String, eventTitle: String, timeZone: String }\nconst EventMetadata = (props) => {\n    return (\n        <div className={'eventMetadata'}>\n            <div style={{ marginTop: \"2px\", marginBottom: \"2px\", padding: \"5px\", }}>\n                <p style={{ fontWeight: \"600\", }}>{props.eventOrganizer}</p>\n                <p>is organizing</p>\n            </div>\n            <div style={{ marginBottom: \"2px\", padding: \"5px\", }}>\n                <h6>{props.eventTitle}</h6>\n            </div>\n            <OptionList timeZone=\"United States - ET\" />\n        </div>\n    )\n}\n\n/**\n * Helper tool for converting date object into an easier-to-work-with format\n * @param {Date} startDate Date object for event start time\n * @param {Date} finishDate Date object for event finish time\n * @returns {Object} day, date, month, and hours/minutes with AM/PM\n */\nfunction getTimeObject(startDate, finishDate) {\n    let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n    let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n    const getTimeObj = (h, m) => {\n        return { hours: ((h - 1) % 12 + 1), minutes: m, am: (h < 12) }\n    };\n    startDate = new Date(startDate);\n    finishDate = new Date(finishDate);\n    return {\n        day: days[startDate.getDay()],\n        date: startDate.getDate(),\n        month: months[startDate.getMonth()],\n        startTime: getTimeObj(startDate.getHours(), startDate.getMinutes()),\n        finishTime: getTimeObj(finishDate.getHours(), finishDate.getMinutes()),\n    };\n}\n\n/**\n * default styles. Have two for each possibility to account for hover/not hovered\n * Admittedly, there is probably a better way to set this up but this is the best\n * workaround I found so far\n */\nconst meetingOptionStyles = [\n    {\n        style: {\n            background: \"none\",\n            color: ICON_COLORS.main_grey,\n        },\n        icon: ICONS.cross\n    },\n    {\n        style: {\n            background: ICON_COLORS.bg_grey,\n            color: ICON_COLORS.main_grey,\n        },\n        icon: ICONS.cross\n    },\n    {\n        style: {\n            background: ICON_COLORS.bg_green,\n            color: ICON_COLORS.main_green,\n        },\n        icon: ICONS.check\n    },\n    {\n        style: {\n            background: ICON_COLORS.bg_green,\n            color: ICON_COLORS.main_green,\n        },\n        icon: ICONS.check\n    },\n    {\n        style: {\n            background: ICON_COLORS.bg_yellow,\n            color: ICON_COLORS.main_yellow,\n        },\n        icon: ICONS.check_with_parens\n    },\n    {\n        style: {\n            background: ICON_COLORS.bg_yellow,\n            color: ICON_COLORS.main_yellow,\n        },\n        icon: ICONS.check_with_parens\n    }\n];\n\n/**\n * Captures the user hovering and clicking on the meeting time, and updates\n * colors and indicator icon accordingly\n */\nclass MeetingOption extends React.Component {\n    constructor(props) {\n        super(props);\n        // console.log(props, props.startDate, props.endDate)\n        // console.log(\"passing in: \", new Date(props.startDate), new Date(props.endDate))\n        this.state = {\n            hover: false,\n            selected: 0,\n            time: getTimeObject(new Date(props.startDate), new Date(props.endDate))\n        };\n        // console.log(\"blah\", this.state.time)\n        this.toggleSelected.bind(this);\n    }\n\n    toggleHover() {\n        // console.log(\"Hover\");\n        let newstate = this.state;\n        newstate.hover = !newstate.hover;\n        // console.log(newstate);\n        this.setState(newstate)\n        // console.log(this.state.hover)\n    }\n\n    toggleSelected() {\n        let newstate = this.state;\n        newstate.selected = (newstate.selected + 1) % 3;\n        this.setState(newstate);\n        // console.log(newstate);\n        this.forceUpdate(); // force an update to update component CSS\n    }\n\n    render() {\n        return (\n            <div\n                onMouseEnter={this.toggleHover.bind(this)} onMouseLeave={this.toggleHover.bind(this)}\n                onClick={() => { this.toggleSelected() }}\n            >\n                <div style={{\n                    ...meetingOptionStyles[this.state.selected * 2 + this.state.hover].style,\n                    border: \"1px solid black\", borderRadius: \"7px\", // adding borders just for visual clarity\n                    userSelect: \"none\"\n                }}\n                    className={'timeComponent ' + [\"mtg-cannot\", \"mtg-can\", \"mtg-maybe\"][this.state.selected]}>\n                    {/* Meeting details */}\n                    <div style={{ padding: \"10px 10px 15px 10px\" }}>\n                        <p className={'day-month-header'}>{this.state.time.day}</p>\n                        <p className={'date-header'}>{this.state.time.date}</p>\n                        <p className={'day-month-header'}>{this.state.time.month}</p>\n                        <div style={{ height: \"5px\" }}></div>\n                        <p>{pad2(this.state.time.startTime.hours)}:{pad2(this.state.time.startTime.minutes)} {this.state.time.startTime.am ? \"AM\" : \"PM\"}</p>\n                        <p>{pad2(this.state.time.finishTime.hours)}:{pad2(this.state.time.finishTime.minutes)} {this.state.time.finishTime.am ? \"AM\" : \"PM\"}</p>\n                    </div>\n                    {/* Icon-in-box indicator for selecting a meeting time */}\n                    <div style={{ width: \"100%\", alignItems: \"center\", margin: \"0 auto\", display: \"flex\" }}>\n                        <span style={{\n                            background: \"white\", color: meetingOptionStyles[this.state.selected * 2 + this.state.hover].style.color,\n                            margin: \"5px auto\" //, height: \"20px\"\n                        }}\n                        >\n                            <div style={{\n                                border: \"1px solid black\", borderRadius: \"5px\",\n                                margin: \"0px\", padding: \"0\", width: \"20px\", height: \"20px\"\n                            }}>\n                                {meetingOptionStyles[this.state.selected * 2 + this.state.hover].icon}\n                            </div>\n                        </span>\n                    </div>\n                </div >\n            </div>\n        )\n    }\n}\n\nfunction ExistingRows(props) { // create component for each other user's times\n    function AvailabilityMarking(props) { // the green/yellow/grey indicator in each meeting time\n        return (\n            <div style={{\n                ...meetingOptionStyles[props.idx * 2 + 1].style,\n                display: \"flex\",\n                width: \"100%\", alignItems: \"center\", justifyContent: \"center\",\n                margin: \"0 auto\", borderRadius: \"5px\",\n            }}>\n                {meetingOptionStyles[props.idx * 2].icon}\n            </div>\n        )\n    }\n    return (\n        <div className={\"existingEntryRow\"}>\n            <div style={{ display: \"flex\", alignItems: \"center\", minWidth: \"200px\", padding: \"20px\" }}>\n                <p className={\"nameText\"}>{props.name}</p>\n            </div>\n            <div className={\"timeColumns\"} style={{ width: \"100%\" }}>\n                {\n                    props.availability.map((idx) => {\n                        return <AvailabilityMarking idx={idx} />\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\n// popup source: https://www.cluemediator.com/create-simple-popup-in-reactjs\nconst Popup = props => {\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n                {props.content}\n            </div>\n        </div>\n    );\n};\n\nfunction GuestTimeView() { // using functional component to use useState hook\n    const [popupOpen, setPopupOpen] = useState(0);\n    const openPopup = () => {\n\n        setPopupOpen(1);\n    }\n    const closePopup = () => {\n        setPopupOpen(0);\n    }\n    const advancePopup = () => {\n        setPopupOpen(2);\n    }\n\n    return (\n        <div className={'guestTimeView'}>\n            <div className={'meetingData'}>\n                <EventMetadata eventOrganizer=\"Moses Mayer\" eventTitle=\"Meeting 1\" />\n            </div>\n            <div className={'schedulingTool'}>\n                <h2>Select your preferred times</h2>\n                <h6 style={{ fontWeight: \"normal\", fontSize: \"1.125rem\", margin: \"0px 0px 5px 0px\" }}>We'll let you know when the organizer picks the best time</h6>\n                <div className={\"newEntryRow\"}> {/* New person's availability entry*/}\n                    <div style={{ display: \"flex\", alignItems: \"center\", minWidth: \"200px\", padding: \"20px\" }}>\n                        <p className={\"nameText\"}>You</p>\n                    </div>\n                    <div className={\"timeColumns\"}>\n                        {DefaultMeetingTimeOptions.map((opt) => {\n                            return <MeetingOption startDate={opt[0]} endDate={opt[1]} />\n                        })}\n                    </div>\n                </div>\n                { /* make an ExistingRows element for each other person's availability */\n                    DefaultAvailability.map((elt) => {\n                        return (<ExistingRows name={elt.name} availability={elt.availability} />)\n                    })\n                }\n                <div style={{\n                    display: \"flex\", flexDirection: \"row-reverse\", alignItems: \"center\",\n                    padding: \"20px\"\n                }}\n                >\n                    <input\n                        type=\"button\"\n                        value=\"Submit\"\n                        onClick={openPopup}\n                    />\n                </div>\n\n                {/* Show the below detail registration popup only if popupOpen is set to 1 */}\n                {popupOpen === 1 && <Popup\n                    content={<div>\n                        <h3>Please fill out your details:</h3>\n                        <p>Your Name</p>\n                        <input type=\"text\" placeholder=\"e.g. John Doe\" style={{ minWidth: \"300px\" }} />\n                        <p>Your Email</p>\n                        <input type=\"text\" placeholder=\"e.g. john.doe@email.com\" style={{ minWidth: \"300px\" }} />\n                        <p></p>\n                        <input type=\"button\" value=\"Back\" onClick={closePopup} />\n                        <input type=\"button\" value=\"Submit\" onClick={advancePopup} />\n                    </div>}\n                    handleClose={closePopup}\n                />}\n\n                {/* Show the below confirmation popup only if popupOpen is set to 2 */}\n                {popupOpen === 2 && <Popup\n                    content={<div>\n                        <b>Your meeting availability has been saved!</b>\n                        <p>Thank you for indicating your availability! An email has been sent to the organizer.</p>\n                    </div>}\n                    handleClose={closePopup}\n                />}\n            </div>\n        </div >\n    )\n    // }\n}\n\nexport default GuestTimeView;\n\n\n/**\n * TLDR:\n * GuestTimeView is our final component. It is built of two divs, one for\n * displaying event metadata and one more for the schedulign tool itself\n * \n * In the scheduling tool we implement using rows -- one for the new entry, and\n * one for each existing entry of availability. Each event is represented as a\n * 'column', where we lay out existing availabilities (using icons and colors)\n * and allow the user to select the ones they want.\n * \n * Confirmation is indicated via a popup as opposed to a new screen for simplicity\n * (the key concept here is that we have a means of recording the new user's\n * details and then confirming that they have submitted)\n */","import logo from './logo.svg';\nimport React from \"react\";\nimport './App.css';\nimport GuestTimeView from './GuestTimeView';\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    // <MeetingEditor />\n    <GuestTimeView />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}